{"version":3,"sources":["../src/index.js"],"names":["handleChange","prevValue","newValue","onChange","PatchEvent","from","AsyncFunction","constructor","createColors","list","type","activeValue","name","options","onFocus","readOnly","tooltip","borderradius","background","contrastcutoff","lighten","darken","opacityThreshold","inner","outer","bg","TinyColor","bgBrightness","getBrightness","bgAccent","isLight","colorList","Array","isArray","console","warn","map","color","i","value","error","currentColor","isValid","isLowContrast","Math","abs","isLowAlpha","getAlpha","displayColor","tinycolor","isActive","decoratorColor","children","title","event","key","ColorList","props","ref","setList","level","markers","presence","validation","filter","marker","errors","groupName","listOption","then","v","Function","description","studioTheme","length","displayName","propTypes","PropTypes","shape","string","number","bool","oneOfType","func","arrayOf","object","isRequired","array","defaultProps","undefined","onBlur"],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\nimport { TinyColor } from '@ctrl/tinycolor'\nimport { studioTheme, ThemeProvider } from '@sanity/ui'\nimport { uniqueId } from 'lodash'\nimport FormField from 'part:@sanity/components/formfields/default?'\nimport PatchEvent, { set, unset } from 'part:@sanity/form-builder/patch-event?'\nimport PropTypes from 'prop-types'\nimport React, { forwardRef, useEffect, useState } from 'react'\nimport { Color, ConditionalWrapper, List, ListItem, Pattern, ToolTip } from './components'\nimport { checkEqual, getColorString, getStaticKey } from './helpers'\n\nconst handleChange = ({ prevValue, newValue, onChange }) => {\n    if (checkEqual(newValue, prevValue)) {\n        onChange(PatchEvent.from(unset()))\n    } else {\n        onChange(PatchEvent.from(set(newValue)))\n    }\n}\n\nconst AsyncFunction = (async () => {}).constructor\n\nconst createColors = ({ list, type, activeValue, name, options, onChange, onFocus, readOnly }) => {\n    const {\n        tooltip,\n        borderradius,\n        background = '#FFFFFF',\n        contrastcutoff = 20,\n        lighten = 10,\n        darken = 10,\n        opacityThreshold = 0.2,\n    } = options || []\n    const { inner = '100%', outer = '100%' } = borderradius || {}\n    const bg = new TinyColor(background)\n    const bgBrightness = bg?.getBrightness() || 255\n    const bgAccent = bg?.isLight() ? bg?.darken(darken) : bg?.lighten(lighten)\n\n    let colorList = list\n\n    if (!colorList || !Array.isArray(colorList)) {\n        // eslint-disable-next-line no-console\n        console.warn('[color-list] No color values found, aborting.')\n        return null\n    }\n\n    return colorList?.map((color, i) => {\n        if (!color.value) {\n            // eslint-disable-next-line no-console\n            console.error('sanity-plugin-color-list could not find a color value. Please check your schema.')\n            return null\n        }\n        const currentColor = new TinyColor(color.value)\n        if (!currentColor.isValid) {\n            // eslint-disable-next-line no-console\n            console.error(\n                `sanity-plugin-color-list could not recognize the color: ${color.value}. Perhaps try another format.`\n            )\n            return null\n        }\n\n        const isLowContrast = Math.abs(bgBrightness - currentColor.getBrightness()) <= contrastcutoff\n        const isLowAlpha = currentColor.getAlpha() < opacityThreshold\n\n        const displayColor = getColorString({\n            tinycolor: currentColor,\n            color: color.value,\n        })\n        const isActive = checkEqual(activeValue, color)\n\n        let decoratorColor = currentColor.isLight() ? currentColor.darken(darken) : currentColor.lighten(lighten)\n        decoratorColor = isLowAlpha ? bgAccent : decoratorColor\n\n        return (\n            <ConditionalWrapper\n                key={getStaticKey(displayColor + i)}\n                condition={tooltip}\n                wrapper={children => <ToolTip title={color.title}>{children}</ToolTip>}\n            >\n                <ListItem\n                    isActive={isActive}\n                    decoratorColor={isLowContrast || isLowAlpha ? decoratorColor : displayColor}\n                    radius={outer}\n                >\n                    <Pattern isActive={isActive} />\n                    <Color\n                        type=\"radio\"\n                        role=\"radio\"\n                        name={name}\n                        aria-label={color.title}\n                        aria-checked={isActive}\n                        tabindex={isActive || (!activeValue && i === 0) ? '0' : '-1'}\n                        disabled={readOnly}\n                        checked={isActive}\n                        value={color}\n                        onChange={() =>\n                            handleChange({\n                                prevValue: activeValue,\n                                newValue: color,\n                                onChange,\n                            })\n                        }\n                        onClick={() =>\n                            handleChange({\n                                prevValue: activeValue,\n                                newValue: color,\n                                onChange,\n                            })\n                        }\n                        onKeyPress={event =>\n                            event.key === 'Enter' &&\n                            handleChange({\n                                prevValue: activeValue,\n                                newValue: color,\n                                onChange,\n                            })\n                        }\n                        onFocus={onFocus}\n                        isActive={isActive}\n                        radius={inner}\n                        hasOutline={isLowContrast || isLowAlpha}\n                        outlineColor={decoratorColor}\n                        fillColor={displayColor}\n                    />\n                </ListItem>\n            </ConditionalWrapper>\n        )\n    })\n}\n\nconst ColorList = forwardRef((props, ref) => {\n    const [list, setList] = useState()\n    const { onChange, level, value, type, readOnly, markers, onFocus, presence } = props\n    const validation = markers.filter(marker => marker.type === 'validation')\n    const errors = validation.filter(marker => marker.level === 'error')\n    const groupName = uniqueId('ColorList')\n    const listOption = type?.options?.list || []\n\n    useEffect(() => {\n        if (listOption) {\n            if (listOption instanceof AsyncFunction === true) {\n                listOption()\n                    .then(v => {\n                        setList(v || listOption)\n                    })\n                    .catch(error => {\n                        console.error(`Could not get color list: ${error}`)\n                    })\n            } else if (listOption instanceof Function) {\n                setList(listOption())\n            }\n        }\n    }, [listOption])\n\n    return (\n        <FormField\n            label={type.title}\n            description={type.description}\n            level={level}\n            labelFor={groupName}\n            markers={markers}\n            presence={presence}\n            onFocus={onFocus}\n        >\n            <ThemeProvider theme={studioTheme}>\n                <List ref={ref} role=\"radiogroup\" hasError={errors.length > 0}>\n                    {createColors({\n                        type,\n                        activeValue: value,\n                        name: groupName,\n                        options: type.options,\n                        list: list || listOption,\n                        onChange,\n                        onFocus,\n                        readOnly,\n                    })}\n                </List>\n            </ThemeProvider>\n        </FormField>\n    )\n})\n\nColorList.displayName = 'ColorList'\n\nColorList.propTypes = {\n    type: PropTypes.shape({\n        title: PropTypes.string,\n        description: PropTypes.string,\n        options: PropTypes.shape({\n            background: PropTypes.string,\n            borderradius: PropTypes.shape({\n                outer: PropTypes.string,\n                inner: PropTypes.string,\n            }),\n            contrastcutoff: PropTypes.number,\n            lighten: PropTypes.number,\n            darken: PropTypes.number,\n            tooltip: PropTypes.bool,\n            list: PropTypes.oneOfType([\n                PropTypes.func,\n                PropTypes.arrayOf(\n                    PropTypes.shape({\n                        title: PropTypes.string,\n                        value: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n                    })\n                ),\n            ]),\n        }).isRequired,\n    }).isRequired,\n    level: PropTypes.number,\n    value: PropTypes.shape({\n        value: PropTypes.string,\n        title: PropTypes.string,\n    }),\n    onChange: PropTypes.func.isRequired,\n    readOnly: PropTypes.bool,\n    onFocus: PropTypes.func,\n    markers: PropTypes.array,\n    presence: PropTypes.array,\n}\n\nColorList.defaultProps = {\n    level: undefined,\n    value: undefined,\n    onChange: undefined,\n    readOnly: undefined,\n    onFocus: undefined,\n    onBlur: undefined,\n    markers: undefined,\n    presence: undefined,\n}\n\nexport default ColorList\n"],"file":"index.js"}